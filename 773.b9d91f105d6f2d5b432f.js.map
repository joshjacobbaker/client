{"version":3,"file":"773.b9d91f105d6f2d5b432f.js","mappings":"yPAmBA,GAhB8BA,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,4OAChB,SAACE,GAAD,OAAWA,EAAMC,MAAMC,WAAWC,WAGlC,SAACH,GAAD,OAAWA,EAAMC,MAAMC,WAAWE,UAGlC,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,WAAWG,WAWhCC,GAA6BR,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,2eAWnC,SAACS,GAAD,OAAOC,EAAAA,EAAAA,IAAN,IAAD,4DACcD,EAAEE,UAAYF,EAAEN,MAAMS,qBAAuBH,EAAEN,MAAMU,2BAC1DJ,EAAEE,UAAYF,EAAEN,MAAMU,2BAA6BJ,EAAEN,MAAMS,yBAO3DE,GAA8Bd,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,2eAWpC,gBAAGG,EAAH,EAAGA,MAAH,OAAeO,EAAAA,EAAAA,IAAd,IAAD,4DACcP,EAAMY,+BACXZ,EAAMa,6BAONC,GAA6BjB,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,qeAWnC,gBAAGG,EAAH,EAAGA,MAAH,OAAeO,EAAAA,EAAAA,IAAd,IAAD,4DACcP,EAAMY,+BACXZ,EAAMa,6B,mBC3BnB,EApCoB,WAClB,IAAME,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,ECXmB,SAACC,EAASH,GACnC,OAAkCI,EAAAA,EAAAA,WAAS,GAA3C,eAAOF,EAAP,KAAkBG,EAAlB,KACMC,EAAmB,SAACC,GACxB,IAAOC,GAAP,OAAgBD,EAAhB,MACAF,EAAaG,EAAMC,gBACnBC,QAAQC,IAAI,YAGRC,GAAcC,EAAAA,EAAAA,UAAQ,WAC1B,OAAOV,IACN,CAACA,IAaJ,OAXAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,qBAAqBV,EAAkBM,GACtDK,EAAgBjB,EAAUkB,QAIhC,OAHID,GAAeF,EAASI,QAAQF,GACpCP,QAAQC,IAAIM,GAEL,WACDA,GAAeF,EAASK,UAAUH,MAEvC,CAACjB,EAAWY,IAERV,EDZWmB,CAChB,CACEC,KAAM,KACNC,WAAY,MACZC,UAAW,IAEbxB,GAGF,OACE,UAACyB,EAAD,CAAmBC,GAAG,MAAwBC,YAAa,CAAEC,SAAU,GAAKC,SAAUC,EAAAA,EAAwBC,QAAQ,UAAUC,QAAQ,UAAUC,KAAK,OAAvJ,WACE,UAAC3C,EAAD,YACE,qDACA,wDAEF,UAACS,EAAD,YACE,qDACA,wDAEF,SAACH,EAAD,WACE,2CAEF,UAACA,EAAD,YACE,6CACA,iDAEF,UAACG,EAAD,YACE,qDACA,cAAGmC,IAAKlC,EAAR,SAAoBE,EAAY,aAAe,qBAlBnB","sources":["webpack://reactserversiderendering/./src/js/pages/LandingPage/LandingPageStyled.js","webpack://reactserversiderendering/./src/js/pages/LandingPage/LandingPage.js","webpack://reactserversiderendering/./src/js/hooks/useElementOnScreen.js"],"sourcesContent":["import styled, { css } from \"styled-components\"\nimport { motion } from \"framer-motion\"\n\nconst LandingPageCardStyled = styled(motion.div)`\n  @media ${(props) => props.theme.screenSize.desktop} {\n  }\n\n  @media ${(props) => props.theme.screenSize.laptop} {\n  }\n\n  @media ${(props) => props.theme.screenSize.mobileL} {\n    height: 100%;\n    width: 100vw;\n    display: grid;\n    grid-template-columns: 1fr;\n    align-items: center;\n    justify-items: center;\n  }\n`\nexport default LandingPageCardStyled\n\nexport const LandingPageCardLargeStyled = styled(motion.div)`\n  display: grid;\n  justify-content: center;\n  /* align-content: center; */\n  /* justify-items: center; */\n  font-size: 1.5rem;\n  grid-auto-rows: 50px;\n  align-items: center;\n  &:hover {\n    background-color: #105b72c2;\n  }\n  ${(p) => css`\n    background: ${p.alternate ? p.theme.landingPageFontColor : p.theme.landingPageBackgroundColor};\n    color: ${p.alternate ? p.theme.landingPageBackgroundColor : p.theme.landingPageFontColor};\n  `}\n  height: 70vh;\n  width: 100%;\n  /* box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px; */\n`\n\nexport const LandingPageCardMediumStyled = styled(motion.div)`\n  display: grid;\n  justify-content: center;\n  /* align-content: center; */\n  /* justify-items: center; */\n  font-size: 1.5rem;\n  grid-auto-rows: 50px;\n  align-items: center;\n  &:hover {\n    background-color: #105b72c2;\n  }\n  ${({ theme }) => css`\n    background: ${theme.landingPageCardBackgroundColor};\n    color: ${theme.landingPageCardFontColor};\n  `}\n  height: 40vh;\n  width: 100%;\n  /* box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px; */\n`\n\nexport const LandingPageCardSmallStyled = styled(motion.div)`\n  display: grid;\n  justify-content: center;\n  /* align-content: center; */\n  /* justify-items: center; */\n  font-size: 1.5rem;\n  grid-auto-rows: 50px;\n  align-items: center;\n  &:hover {\n    background-color: #105b72c2;\n  }\n  ${({ theme }) => css`\n    background: ${theme.landingPageCardBackgroundColor};\n    color: ${theme.landingPageCardFontColor};\n  `}\n  height: 20vh;\n  width: 100%;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n`\n","import React, { useRef } from \"react\"\nimport { HashRouter, Routes, Route, Redirect, Outlet } from \"react-router-dom\"\n// import { motion } from \"framer-motion\"\nimport useElementOnScreen from \"../../hooks/useElementOnScreen\"\n\n// Layout\nimport LandingPageStyled, { LandingPageCardLargeStyled, LandingPageCardMediumStyled, LandingPageCardSmallStyled } from \"./LandingPageStyled\"\n// Components\n// Animations\nimport pageTransitionVariants from \"../../animations/pageTransitionVariants\"\n\nconst LandingPage = () => {\n  const targetRef = useRef(null)\n  const isVisible = useElementOnScreen(\n    {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.3,\n    },\n    targetRef\n  )\n\n  return (\n    <LandingPageStyled id=\"top\" key=\"landingpage\" transitions={{ duration: 1 }} variants={pageTransitionVariants} initial=\"initial\" animate=\"animate\" exit=\"exit\">\n      <LandingPageCardLargeStyled>\n        <p>ajfkadslfjadskfklsadfjda</p>\n        <p>adsjfkjkdajfljdsfjdskalj</p>\n      </LandingPageCardLargeStyled>\n      <LandingPageCardSmallStyled>\n        <p>adsjfkjkdajfljdsfjdskalj</p>\n        <p>adsjfkjkdajfljdsfjdskalj</p>\n      </LandingPageCardSmallStyled>\n      <LandingPageCardMediumStyled>\n        <p>Landing Page</p>\n      </LandingPageCardMediumStyled>\n      <LandingPageCardMediumStyled>\n        <p>jfdaskfjakdsjads</p>\n        <p>fadsjfasdkjflasdj</p>\n      </LandingPageCardMediumStyled>\n      <LandingPageCardSmallStyled>\n        <p>adsjfkjkdajfljdsfjdskalj</p>\n        <p ref={targetRef}>{isVisible ? \"is visible\" : \"Not Visible\"}</p>\n      </LandingPageCardSmallStyled>\n    </LandingPageStyled>\n  )\n}\n\nexport default LandingPage\n","import React, { useState, useMemo, useEffect } from \"react\"\n\nconst useElementOnScreen = (options, targetRef) => {\n  const [isVisible, setIsVisible] = useState(false)\n  const callbackFunction = (entries) => {\n    const [entry] = entries\n    setIsVisible(entry.isIntersecting)\n    console.log(\"RUnning\")\n  }\n\n  const optionsMemo = useMemo(() => {\n    return options\n  }, [options])\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(callbackFunction, optionsMemo)\n    const currentTarget = targetRef.current\n    if (currentTarget) observer.observe(currentTarget)\n    console.log(currentTarget)\n\n    return () => {\n      if (currentTarget) observer.unobserve(currentTarget)\n    }\n  }, [targetRef, optionsMemo])\n\n  return isVisible\n}\n\nexport default useElementOnScreen\n"],"names":["styled","motion","props","theme","screenSize","desktop","laptop","mobileL","LandingPageCardLargeStyled","p","css","alternate","landingPageFontColor","landingPageBackgroundColor","LandingPageCardMediumStyled","landingPageCardBackgroundColor","landingPageCardFontColor","LandingPageCardSmallStyled","targetRef","useRef","isVisible","options","useState","setIsVisible","callbackFunction","entries","entry","isIntersecting","console","log","optionsMemo","useMemo","useEffect","observer","IntersectionObserver","currentTarget","current","observe","unobserve","useElementOnScreen","root","rootMargin","threshold","LandingPageStyled","id","transitions","duration","variants","pageTransitionVariants","initial","animate","exit","ref"],"sourceRoot":""}